{
  "previousHmac":"20d2f6f6d9d4b0b536f74ca47410d69685d28139aa31aa88e504371d2d392",
  "event":{
     "SourceType" : "",
     "SourceName" : "SUP",
     "Category" : "",
     "EventDateTime" : "01/09/2018 9:45:06",
     "SourceIP" : "192.111.222.",
     "EventDetails" : "In computer science, a tail call is a subroutine call performed as the final action of a procedure. If a tail call might lead to the same subroutine being called again later in the call chain, the subroutine is said to be tail-recursive, which is a special case of recursion. Tail recursion (or tail-end recursion) is particularly useful, and often easy to handle in implementations.Tail calls can be implemented without adding a new stack frame to the call stack. Most of the frame of the current procedure is no longer needed, and can be replaced by the frame of the tail call, modified as appropriate (similar to overlay for processes, but for function calls). The program can then jump to the called subroutine. Producing such code instead of a standard call sequence is called tail call elimination. Tail call elimination allows procedure calls in tail position to be implemented as efficiently as goto statements, thus allowing efficient structured programming. In the words of Guy L. Steele.Peek wil.",
     "EventDetailSize" : 1024,
     "Signature" : "Y89IZY0BwutpsCoOjgLR7CooraKleeaPofg"
  },
  "eventstatus": 1,
  "currentHmac": "20d2f6f6d9d4b0b536f74ca47410d69685d28139aa31aa88e504371d2d392",
  "InsertedRecordTime" : "10/9/2009 9:45:06"
}